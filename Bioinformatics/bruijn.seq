## V00762777 bruijn
# given a sequence in a FASTA file, construct a non-weighted de-bruijn graph from it
# output the graph to bruijn.jpg
# usage: seqc -d bruijn.seq test.fa

import sys
import python

seq = ''

for r in FASTA(sys.argv[1], fai = False):
    seq = str(r.seq)

l = list[str]()
e = list[tuple[str,str]]()

#original algorithm studied:
# https://www.coursera.org/lecture/dna-sequencing/practical-building-a-de-bruijn-graph-4SRdc
def dbg(st, k):
    for i in range(len(st) - k + 1):
        e.append((st[i:i+k-1], st[i+1:i+k]))
    return e

pydef graphviz(edges: list[tuple[str,str]]):
    import graphviz
    g = graphviz.Digraph(format='png')
    for src, dst in edges:
        g.edge(src, dst)
    g.render('bruijn')

e = dbg(seq, 16)
graphviz(e)